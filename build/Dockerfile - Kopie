ARG myimage
FROM $myimage
MAINTAINER Karsten Hassel

RUN apt-get update && apt-get upgrade -y

RUN apt-get install -y wget

RUN apt-get -y install git gcc cmake build-essential libsqlite3-dev libcurl4-openssl-dev libfaad-dev libsoup2.4-dev libgcrypt20-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-good libasound2-dev sox gedit vim python3-pip
RUN pip3 install --upgrade setuptools
RUN pip3 install flask commentjson

ENV BASE=/srv

RUN cd $BASE \
 && mkdir sdk-folder && cd sdk-folder \
 && mkdir sdk-build sdk-source third-party application-necessities \
 && cd application-necessities && mkdir sound-files

RUN cd $BASE/sdk-folder/third-party \
 && wget -c http://www.portaudio.com/archives/pa_stable_v190600_20161030.tgz \
 && tar zxf pa_stable_v190600_20161030.tgz \
 && cd portaudio \
 && ./configure --without-jack \
 && make \
 && rm -rf ./pa_stable_v190600_20161030.tgz
 
RUN cd $BASE/sdk-folder/sdk-source && git clone --depth 1 -b master --single-branch git://github.com/alexa/avs-device-sdk.git 

RUN apt-get install -y libatlas-base-dev
RUN cd $BASE/sdk-folder/third-party && git clone --depth 1 -b master --single-branch https://github.com/Kitt-AI/snowboy.git
#RUN cd $BASE/sdk-folder/third-party \
# && wget -c https://github.com/Kitt-AI/snowboy/archive/v1.2.0.tar.gz \
# && tar zxf v1.2.0.tar.gz \
# && ls -la \
# && rm -rf ./v1.2.0.tar.gz
 
#RUN cd $BASE/sdk-folder/third-party && git clone --depth 1 -b master --single-branch git://github.com/Sensory/alexa-rpi.git
#ENV Sensory_Loc=$BASE/sdk-folder/third-party
#RUN $Sensory_Loc/alexa-rpi/bin/sdk-license file $Sensory_Loc/alexa-rpi/config/license-key.txt $Sensory_Loc/alexa-rpi/lib/libsnsr.a $Sensory_Loc/alexa-rpi/models/spot-alexa-rpi-20500.snsr $Sensory_Loc/alexa-rpi/models/spot-alexa-rpi-21000.snsr $Sensory_Loc/alexa-rpi/models/spot-alexa-rpi-31000.snsr

# Fix im Quelltext wegen compile error (todo: mit sed lÃ¶sen):
COPY KittAiKeyWordDetector.cpp $BASE/sdk-folder/sdk-source/avs-device-sdk/KWD/KittAi/src/KittAiKeyWordDetector.cpp

#COPY snowboy-detect-cxx-compat.cc $BASE/sdk-folder/sdk-source/avs-device-sdk/SampleApp/src/snowboy-detect-cxx-compat.cc
#COPY snowboy-detect-cxx-compat.h $BASE/sdk-folder/sdk-source/avs-device-sdk/SampleApp/include/SampleApp/snowboy-detect-cxx-compat.h

RUN wget ftp://ftp.fu-berlin.de/unix/languages/gcc/snapshots/LATEST-4.8/gcc-4.8-20150611.tar.bz2
RUN tar xf gcc-4.8-20150611.tar.bz2

RUN wget http://anonscm.debian.org/viewvc/gcccvs/branches/sid/gcc-4.7/debian/patches/armhf-triplet.diff?view=co -O armhf-triplet.diff
RUN wget http://anonscm.debian.org/viewvc/gcccvs/branches/sid/gcc-4.7/debian/patches/gcc-multiarch-trunk.diff?view=co -O gcc-multiarch-trunk.diff

WORKDIR ./gcc-4.8-20150611 
RUN patch -p2 ../armhf-triplet.diff && patch -p2 ../gcc-multiarch-trunk.diff

RUN configure && make && make install

RUN xxx

#https://raspberrypi.stackexchange.com/questions/12325/how-can-i-install-gcc-4-8-on-the-raspberry-pi?rq=1

WORKDIR $BASE/sdk-folder/sdk-build

RUN cmake $BASE/sdk-folder/sdk-source/avs-device-sdk \
 -DKITTAI_KEY_WORD_DETECTOR=ON \
 -DKITTAI_KEY_WORD_DETECTOR_LIB_PATH=$BASE/sdk-folder/third-party/snowboy/lib/rpi/libsnowboy-detect.a \
 -DKITTAI_KEY_WORD_DETECTOR_INCLUDE_DIR=$BASE/sdk-folder/third-party/snowboy/include \
 -DGSTREAMER_MEDIA_PLAYER=ON \
 -DPORTAUDIO=ON \
 -DPORTAUDIO_LIB_PATH=$BASE/sdk-folder/third-party/portaudio/lib/.libs/libportaudio.a \
 -DPORTAUDIO_INCLUDE_DIR=$BASE/sdk-folder/third-party/portaudio/include

#RUN cmake $BASE/sdk-folder/sdk-source/avs-device-sdk \
# -DSENSORY_KEY_WORD_DETECTOR=ON \
# -DSENSORY_KEY_WORD_DETECTOR_LIB_PATH=$BASE/sdk-folder/third-party/alexa-rpi/lib/libsnsr.a \
# -DSENSORY_KEY_WORD_DETECTOR_INCLUDE_DIR=$BASE/sdk-folder/third-party/alexa-rpi/include \
# -DGSTREAMER_MEDIA_PLAYER=ON \
# -DPORTAUDIO=ON \
# -DPORTAUDIO_LIB_PATH=$BASE/sdk-folder/third-party/portaudio/lib/.libs/libportaudio.a \
# -DPORTAUDIO_INCLUDE_DIR=$BASE/sdk-folder/third-party/portaudio/include

RUN make SampleApp -j2
 
#RUN wget https://raw.githubusercontent.com/alexa/avs-device-sdk/master/tools/RaspberryPi/setup.sh

#RUN echo 'CLIENT_SECRET="1111111111111111111111111111111111111111111111111111111111111111"' > config.txt \
# && echo 'DEVICE_SERIAL_NUMBER="123456"' >> config.txt \
# && echo 'CLIENT_ID="amzn1.application-oa2-client.11111111111111111111111111111111"' >> config.txt \
# && echo 'PRODUCT_ID="dummy"' >> config.txt

#RUN sed -i "s:read input:input=agree:" setup.sh \
# && sed -i "s:sudo apt-get:echo:" setup.sh \
# && sed -i "s:pip install:echo:" setup.sh
 
#RUN bash setup.sh config.txt

#RUN cat startauth.sh
 
#RUN apt-get autoremove && apt-get clean  
  
#WORKDIR $Origin

#COPY entrypoint.sh $Origin
#RUN cd $Origin && chmod +x entrypoint.sh

#RUN env
